u v c s d p us
@Starter(c)
u->c.AdquirirProducto{
== "Mostrar parrilla de Productos"==
    productos=c->s.MostrarProductos(){ productos = s->d.ObtenerProductos() }
  
=="Seleccion de Producto"==
    coordenadas = c->v.TryObtenerTupla("Indica la posición x,y"){ u->v.coordenadas }         articulo = c->s.ObtenerInfoArticulo(coordenadas){ articulo = s->d.ObtenerInfoarticulo()
    }
  
    v.Mostrar("Has seleccionado {articulo}")
      
=="Parafarmacia e identificación"==
    if (articulo_Tipo == "ParaFarma" && username == "") {
        c->v.Mostrar("Este articulo necesita que te identifiques")
        username = v.TryObtenerDato("Indica tu nombre") { u->v.username }
        valid = c->s.Validarusuario(){ valid = s->us.ValidarUsuario()}
        if(!valid){ c->v.Mostrar("Error de validación") 
                    c->v.FinCasoDeUso }
      }
      
=="Introducción de pago y validación"==
    while(true){
      monedas = c->v.TryObtenerArrayInt("Introduce monedas") { u->v.pago }
      pago = Efectivo(monedas)
      if(pago_Valido){ c->v.FinCasoDeUso }
      v.Mostrar("Indique una cantidad válida")
    }
    pagoStatus = c->s.ValidarPago(articulo_Precio, pago){ pagoStatus = s->p.ValidarPago() }
  
    if(Insuficiente){ c->v.Mostrar("Importe Insuficiente") }
    else if(NoAdmitidp){ c->v.Mostrar("Importe Incorrecto") }
    else if(SinCambios){ c->v.Mostrar("Cambios no disponibles") }
    if(!Valido){ c->v.Mostrar("Recoja su dinero") }
      
=="Entrega del producto"==
    c->v.Mostrar("Expulsando articulo")
    c->s.DescontarCantidad(coordenadas) { s->d.DescontarCantidad() }
    cambio = s.AplicarPago(articulo_Precio, pago) { cambio = s->p.AplicarPago() }
    if (cambio_Importe > 0){ c->v.Mostrar("Su cambio {cambio}") } 

=="Confirmación de nueva compra"==
   if(username){
   sn = c->v.TryObtenerCaracterDeString("Desea seguir comprando") { u->v.SN }
   if(N) { c->v.FinCasoDeUso }
   }
}

